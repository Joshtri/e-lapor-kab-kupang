generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  name          String      @db.VarChar(100)
  nikNumber     String      @unique @db.VarChar(16)
  contactNumber String      @db.VarChar(15)
  email         String      @unique @db.VarChar(100)
  password      String      @db.VarChar(255)
  role          Role        @default(PELAPOR)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  comments      Comment[]
  logs          Log[]
  reports       Report[]
  bugReports    BugReport[] // ✅ Relasi ke laporan bug
  Notifications Notification[]

  // ✅ Tambahkan field untuk reset password
  resetPasswordToken   String?   @db.Text
  resetPasswordExpires DateTime?
}

model Report {
  id          Int       @id @default(autoincrement())
  userId      Int
  title       String    @db.VarChar(255)
  description String
  category    Category
  priority    Priority
  status      Status    @default(PENDING)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[]
  logs        Log[]
  user        User      @relation(fields: [userId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  reportId  Int
  userId    Int
  comment   String
  createdAt DateTime @default(now())
  
  report    Report   @relation(fields: [reportId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Log {
  id        Int      @id @default(autoincrement())
  reportId  Int
  userId    Int
  action    Action
  timestamp DateTime @default(now())
  report    Report   @relation(fields: [reportId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model BugReport {
  id          Int         @id @default(autoincrement())
  userId      Int
  title       String      @db.VarChar(255) // ✅ Judul masalah
  description String // ✅ Deskripsi lengkap bug/kesalahan
  priority    BugPriority @default(LOW) // ✅ Prioritas laporan bug
  status      BugStatus   @default(OPEN) // ✅ Status bug
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id]) // ✅ Relasi ke user
}

// model OPD {
//   id          Int     @id @default(autoincrement())
//   name        String  @db.VarChar(255) // ✅ Nama Instansi OPD (bebas, tidak enum)
//   email       String? @unique @db.VarChar(100) // ✅ Email Resmi OPD (opsional)
//   phoneNumber String? @db.VarChar(15) // ✅ Nomor Kontak OPD (opsional)
//   address     String? // ✅ Alamat OPD (opsional)
//   wilayah     String? // ✅ Wilayah OPD (misalnya "Kota Kupang", "Kabupaten Flores")
//   password    String  @db.VarChar(255) // ✅ Password untuk login OPD

//   // ✅ Informasi Kepala OPD atau Penanggung Jawab
//   kepalaOpdName  String  @db.VarChar(100) // ✅ Nama Kepala OPD
//   kepalaOpdNIP   String? @unique @db.VarChar(18) // ✅ NIP Kepala OPD (jika ASN)
//   kepalaOpdEmail String? @db.VarChar(100) // ✅ Email Kepala OPD
//   kepalaOpdPhone String? @db.VarChar(15) // ✅ Nomor HP Kepala OPD

//   // ✅ Keterangan tambahan
//   description String? // ✅ Deskripsi atau tugas utama OPD
//   website     String? @db.VarChar(255) // ✅ Website resmi OPD (jika ada)
//   logoUrl     String? @db.VarChar(255) // ✅ URL Logo OPD

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }


model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int?     // ID User yang menerima notifikasi (opsional, bisa null untuk umum)
  message   String   @db.VarChar(255) // Isi notifikasi
  link      String?  @db.VarChar(255) // Link tujuan jika diklik
  isRead    Boolean  @default(false) // Status apakah sudah dibaca
  createdAt DateTime @default(now())

  user      User?    @relation(fields: [userId], references: [id])
}


enum Role {
  BUPATI
  ADMIN
  PELAPOR
}

enum Category {
  INFRASTRUKTUR
  PELAYANAN
  SOSIAL
  LAINNYA
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  PENDING
  PROSES
  SELESAI
  DITOLAK
}

enum Action {
  CREATED
  UPDATED
  DELETED
  STATUS_CHANGED
}

enum BugStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
}

enum BugPriority {
  LOW
  MEDIUM
  HIGH
}
